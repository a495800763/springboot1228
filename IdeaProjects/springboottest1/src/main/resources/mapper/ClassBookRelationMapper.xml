<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liumq.springboottest1.mapper.ClassBookRelationMapper" >
  <resultMap id="BaseResultMap" type="com.liumq.springboottest1.entity.ClassBookRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="bookid" property="bookid" jdbcType="INTEGER" />
    <id column="classid" property="classid" jdbcType="INTEGER" />
    <result column="classname" property="classname" jdbcType="VARCHAR" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    bookid, classid, classname, bookname
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.liumq.springboottest1.entity.ClassBookRelationKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from classbookrelation
    where bookid = #{bookid,jdbcType=INTEGER}
      and classid = #{classid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.liumq.springboottest1.entity.ClassBookRelationKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from classbookrelation
    where bookid = #{bookid,jdbcType=INTEGER}
      and classid = #{classid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liumq.springboottest1.entity.ClassBookRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into classbookrelation (bookid, classid, classname, 
      bookname)
    values (#{bookid,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR}, 
      #{bookname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liumq.springboottest1.entity.ClassBookRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into classbookrelation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        bookid,
      </if>
      <if test="classid != null" >
        classid,
      </if>
      <if test="classname != null" >
        classname,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liumq.springboottest1.entity.ClassBookRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update classbookrelation
    <set >
      <if test="classname != null" >
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
    </set>
    where bookid = #{bookid,jdbcType=INTEGER}
      and classid = #{classid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liumq.springboottest1.entity.ClassBookRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update classbookrelation
    set classname = #{classname,jdbcType=VARCHAR},
      bookname = #{bookname,jdbcType=VARCHAR}
    where bookid = #{bookid,jdbcType=INTEGER}
      and classid = #{classid,jdbcType=INTEGER}
  </update>
</mapper>